server:
  port: 8081
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
            - name: Retry
              args:
                retries: 5
                series: SERVER_ERROR
                methods: GET,POST,PUT,DELETE
                exceptions: java.io.IOException, org.springframework.cloud.gateway.support.NotFoundException
                backoff:
                  firstBackoff: 10ms
                  maxBackoff: 1000ms
                  factor: 2
                  basedOnPreviousValue: false
        - id: product-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/v1/products/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
            - name: Retry
              args:
                retries: 5
                series: SERVER_ERROR
                methods: GET,POST,PUT,DELETE

  #  redis:
  #    host: localhost
  #    port: 6355
  #    password: "5Df3A33ec1f33bE87"
  #    timeout: 10000ms
  #    lettuce:
  #      pool:
  #        max-active: 20       # Maximum connections
  #        max-idle: 10         # Maximum idle connections
  #        min-idle: 5          # Minimum idle connections
  #        max-wait: 5000ms     # Max wait for a connection
  #        time-between-eviction-runs: 60000ms # Eviction check interval
  #      shutdown-timeout: 200ms
  #      command-timeout: 10s
  #    cache:
  #      type: redis
  #      redis:
  #        time-to-live: 604800 # 1 week in seconds
  #        key-prefix: "cache:"
  #        use-key-prefix: true
  #        cache-null-values: false

  data:
    redis:
      repositories:
        enabled: false
      host: localhost
      port: 6355
      password: "5Df3A33ec1f33bE87"
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 20       # Maximum connections
          max-idle: 10         # Maximum idle connections
          min-idle: 5          # Minimum idle connections
          max-wait: 5000ms     # Max wait for a connection
          time-between-eviction-runs: 60000ms # Eviction check interval
        shutdown-timeout: 200ms
        command-timeout: 10s
      cache:
        type: redis
        redis:
          time-to-live: 604800 # 1 week in seconds
          key-prefix: "cache:"
          use-key-prefix: true
          cache-null-values: false
  cache:
    type: redis
    redis:
      time-to-live: 604800 # 1 week in seconds
      key-prefix: "cache:"
      use-key-prefix: true
      cache-null-values: false

  security:
    oauth2:
      resourceserver:
        jwt:
          secret: "YFJFqggP14cyMKLZiGtDJUCnvggxQd7VahdoqUnkFNTxbFBEMxhsiwzoVacMO98z8PlFVb4sIFOqIGoF3uNIrvG98g7/piE/bOQxM8zaFYc8Dlqamwp0bGpjKepU16xNtd2vlUZ1Aki7F459ODvhK7rD6kCMOzRB+d6TwNIsNJrTpVBAQlR7cicLU5cJluJi+gavVhmoDw6W1lfUHkbUEBtqP6C+T/Ksn9NPQOTaujE9TOnNVgtgDHszw8GpoFk0WWwN1HewIq4ZcbE0i4053I8eEDLF50e9O5juySulUGBYHFK0HeQbDNZP8riIIWsEYt8o2NRf4TUMIrfZo3I0xA=="

rate-limiter:
  capacity: 10                # 100 bucket size
  refill-period: 30
  refill-period-unit: SECONDS
  tokens-per-refill: 5

  refill-tokens: 5  # 100 how many tokens added each interval
  refill-interval-seconds: 30  # interval for refill
  key-prefix: "tbucket"        # redis key prefix
  respect-x-forwarded-for: true
  deny-body: |
    {
      "success": false,
      "code": 429,
      "status": "TOO_MANY_REQUESTS",
      "message": "Rate limit exceeded. Try again in the next 30 seconds."
    }

jwt:
  secret: "YFJFqggP14cyMKLZiGtDJUCnvggxQd7VahdoqUnkFNTxbFBEMxhsiwzoVacMO98z8PlFVb4sIFOqIGoF3uNIrvG98g7/piE/bOQxM8zaFYc8Dlqamwp0bGpjKepU16xNtd2vlUZ1Aki7F459ODvhK7rD6kCMOzRB+d6TwNIsNJrTpVBAQlR7cicLU5cJluJi+gavVhmoDw6W1lfUHkbUEBtqP6C+T/Ksn9NPQOTaujE9TOnNVgtgDHszw8GpoFk0WWwN1HewIq4ZcbE0i4053I8eEDLF50e9O5juySulUGBYHFK0HeQbDNZP8riIIWsEYt8o2NRf4TUMIrfZo3I0xA=="
  expiration: 86400000

logging:
  level:
    com.complete.api.gateway: DEBUG
    io.jsonwebtoken: DEBUG
    org.springframework.cloud.gateway: INFO
    org.springframework.data.redis: DEBUG # WARN
    org.springframework.security: INFO


allowed:
  origins:
    - "http://127.0.0.1:4200"
    - "http://127.0.0.1:5500"
    - "http://127.0.0.1:3000"
    - "http://localhost:4200"
    - "http://localhost:5500"
    - "http://localhost:3000"
  methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "PATCH"
    - "OPTIONS"
  headers:
    - "Content-Type"
    - "Authorization"
    - "X-Requested-With"
    - "X-CSRF-Token"
    - "platform"
    - "Cache-Control"
    - "Access-Control-Allow-Origin"

# ab -n 200 -c 10 http://localhost:8081/api/v1/products/all
# for /l %i in (1,1,120) do curl -s -o nul -w "%{http_code}\n" http://localhost:8081/api/v1/products/all